apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-lens-app
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 2
  selector:
    matchLabels:
      app: {{ .Release.Name }}-lens-app
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-lens-app
    spec:
      containers:
        - name: {{ .Release.Name }}-lens-app
          image: {{ .Values.lens_app.image.repository }}:{{ .Values.lens_app.image.tag }}
          imagePullPolicy: {{ .Values.lens_app.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.lens_app.port }}
          env:
            - name: RABBITMQ_HOST
              value: "{{ .Values.rabbitmq.host }}"
            - name: RABBITMQ_USER
              value: "{{ .Values.rabbitmq.user }}"
            - name: RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: rabbitmq-password
            - name: METRIC_SERVICE_NAME
              value: "{{ .Values.lens_app.metric_service_name }}"
            - name: METRIC_SERVICE_VERSION
              value: "{{ .Values.lens_app.metric_service_version }}"
            - name: JAEGER_AGENT_HOST
              value: "{{ .Values.jaeger.agent_host }}"
            - name: JAEGER_AGENT_PORT
              value: "{{ .Values.jaeger.agent_port }}"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-ocr-app
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 3
  selector:
    matchLabels:
      app: {{ .Release.Name }}-ocr-app
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-ocr-app
    spec:
      containers:
        - name: {{ .Release.Name }}-ocr-app
          image: {{ .Values.ocr_app.image.repository }}:{{ .Values.ocr_app.image.tag }}
          imagePullPolicy: {{ .Values.ocr_app.image.pullPolicy }}
          env:
            - name: RABBITMQ_HOST
              value: "{{ .Values.rabbitmq.host }}"
            - name: RABBITMQ_USER
              value: "{{ .Values.rabbitmq.user }}"
            - name: RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: rabbitmq-password
            - name: METRIC_SERVICE_NAME
              value: "{{ .Values.ocr_app.metric_service_name }}"
            - name: METRIC_SERVICE_VERSION
              value: "{{ .Values.ocr_app.metric_service_version }}"
            - name: JAEGER_AGENT_HOST
              value: "{{ .Values.jaeger.agent_host }}"
            - name: JAEGER_AGENT_PORT
              value: "{{ .Values.jaeger.agent_port }}"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-translation-app
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 2
  selector:
    matchLabels:
      app: {{ .Release.Name }}-translation-app
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-translation-app
    spec:
      containers:
        - name: {{ .Release.Name }}-translation-app
          image: {{ .Values.translation_app.image.repository }}:{{ .Values.translation_app.image.tag }}
          imagePullPolicy: {{ .Values.translation_app.image.pullPolicy }}
          env:
            - name: RABBITMQ_HOST
              value: "{{ .Values.rabbitmq.host }}"
            - name: RABBITMQ_USER
              value: "{{ .Values.rabbitmq.user }}"
            - name: RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: rabbitmq-password
            - name: METRIC_SERVICE_NAME
              value: "{{ .Values.translation_app.metric_service_name }}"
            - name: METRIC_SERVICE_VERSION
              value: "{{ .Values.translation_app.metric_service_version }}"
            - name: JAEGER_AGENT_HOST
              value: "{{ .Values.jaeger.agent_host }}"
            - name: JAEGER_AGENT_PORT
              value: "{{ .Values.jaeger.agent_port }}"
